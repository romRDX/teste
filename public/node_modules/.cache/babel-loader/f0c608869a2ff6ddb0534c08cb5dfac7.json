{"ast":null,"code":"/**\r\n * Receives:\r\n * @param {*} data - Array of Comments of type IComment or Books of type IBook\r\n * @param {*} type - Type of sorting (by date, alphabetical)\r\n * @param {*} direction - If its Ascending or Descending\r\n * There is an specific process for each combination of type and direction.\r\n */\nexport default function orderBy(data, type, direction) {\n  const typeDirection = type + '/' + direction;\n\n  switch (typeDirection) {\n    case 'DATE/DESC':\n      {\n        const sortedArray = data.slice().sort((a, b) => b.created_at - a.created_at);\n        return sortedArray;\n      }\n\n    case 'DATE/ASC':\n      {\n        const sortedArray = data.slice().sort((a, b) => a.created_at - b.created_at);\n        return sortedArray;\n      }\n\n    case 'A-Z/DESC':\n      {\n        const sortedArray = data.slice().sort(function (a, b) {\n          return b.title.localeCompare(a.title);\n        });\n        return sortedArray;\n      }\n\n    case 'A-Z/ASC':\n      {\n        const sortedArray = data.slice().sort(function (a, b) {\n          return a.title.localeCompare(b.title);\n        });\n        return sortedArray;\n      }\n\n    default:\n      {\n        return data;\n      }\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/utils/orderBy.js"],"names":["orderBy","data","type","direction","typeDirection","sortedArray","slice","sort","a","b","created_at","title","localeCompare"],"mappings":"AAAA;;;;;;;AAQA,eAAe,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,SAA7B,EAAuC;AAEpD,QAAMC,aAAa,GAAGF,IAAI,GAAG,GAAP,GAAaC,SAAnC;;AAEA,UAAOC,aAAP;AAEE,SAAK,WAAL;AAAkB;AAChB,cAAMC,WAAW,GAAGJ,IAAI,CAACK,KAAL,GAAaC,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAA7C,CAApB;AACA,eAAOL,WAAP;AACD;;AAED,SAAK,UAAL;AAAiB;AACf,cAAMA,WAAW,GAAGJ,IAAI,CAACK,KAAL,GAAaC,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAA7C,CAApB;AACA,eAAOL,WAAP;AACD;;AAED,SAAK,UAAL;AAAiB;AACf,cAAMA,WAAW,GAAGJ,IAAI,CAACK,KAAL,GAAaC,IAAb,CAAkB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACnD,iBAAOA,CAAC,CAACE,KAAF,CAAQC,aAAR,CAAsBJ,CAAC,CAACG,KAAxB,CAAP;AACD,SAFmB,CAApB;AAIA,eAAON,WAAP;AACD;;AAED,SAAK,SAAL;AAAgB;AACd,cAAMA,WAAW,GAAGJ,IAAI,CAACK,KAAL,GAAaC,IAAb,CAAkB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACnD,iBAAOD,CAAC,CAACG,KAAF,CAAQC,aAAR,CAAsBH,CAAC,CAACE,KAAxB,CAAP;AACD,SAFmB,CAApB;AAIA,eAAON,WAAP;AACD;;AAED;AAAS;AACP,eAAOJ,IAAP;AACD;AA9BH;AAgCD;AAAA","sourcesContent":["/**\r\n * Receives:\r\n * @param {*} data - Array of Comments of type IComment or Books of type IBook\r\n * @param {*} type - Type of sorting (by date, alphabetical)\r\n * @param {*} direction - If its Ascending or Descending\r\n * There is an specific process for each combination of type and direction.\r\n */\r\n\r\nexport default function orderBy(data, type, direction){\r\n\r\n  const typeDirection = type + '/' + direction;\r\n\r\n  switch(typeDirection){\r\n\r\n    case 'DATE/DESC': {\r\n      const sortedArray = data.slice().sort((a, b) => b.created_at - a.created_at);\r\n      return sortedArray;\r\n    }\r\n\r\n    case 'DATE/ASC': {\r\n      const sortedArray = data.slice().sort((a, b) => a.created_at - b.created_at);\r\n      return sortedArray;\r\n    }\r\n\r\n    case 'A-Z/DESC': {\r\n      const sortedArray = data.slice().sort(function(a, b) {\r\n        return b.title.localeCompare(a.title);\r\n      });\r\n\r\n      return sortedArray;\r\n    }\r\n\r\n    case 'A-Z/ASC': {\r\n      const sortedArray = data.slice().sort(function(a, b) {\r\n        return a.title.localeCompare(b.title);\r\n      });\r\n\r\n      return sortedArray;\r\n    }\r\n\r\n    default: {\r\n      return data;\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}