{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romul\\\\Desktop\\\\Nova pasta\\\\Sheetgo-BookShelf\\\\src\\\\components\\\\InputRadio\\\\index.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\nconst RadioInput = ({\n  name,\n  options,\n  checkedValue,\n  ...rest\n}) => {\n  const inputRefs = useRef([]);\n  const {\n    fieldName,\n    registerField,\n    defaultValue\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRefs.current,\n      getValue: refs => {\n        return refs.filter(ref => ref.checked).map(ref => ref.value);\n      },\n      clearValue: refs => {\n        refs.forEach(ref => {\n          ref.checked = false;\n        });\n      },\n      setValue: (refs, values) => {\n        refs.forEach(ref => {\n          if (values.includes(ref.id)) {\n            ref.checked = true;\n          }\n        });\n      }\n    });\n  }, [defaultValue, fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(\"div\", {\n    key: option[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: option[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, option[1], /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    ref: ref => inputRefs.current.push(ref),\n    value: option[0],\n    type: \"radio\",\n    name: name,\n    id: option[0],\n    defaultChecked: option[0] === checkedValue\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default RadioInput;","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/components/InputRadio/index.tsx"],"names":["React","useEffect","useRef","useField","Container","RadioInput","name","options","checkedValue","rest","inputRefs","fieldName","registerField","defaultValue","ref","current","getValue","refs","filter","checked","map","value","clearValue","forEach","setValue","values","includes","id","option","push"],"mappings":";AAAA,OAAOA,KAAP,IAEEC,SAFF,EAGEC,MAHF,QAIO,OAJP;AAOA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAWA,MAAMC,UAAiC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,YAAjB;AAA+B,KAAGC;AAAlC,CAAD,KAA8C;AACtF,QAAMC,SAAS,GAAGR,MAAM,CAAqB,EAArB,CAAxB;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAA6CV,QAAQ,CAACG,IAAD,CAA3D;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa,CAAC;AACZN,MAAAA,IAAI,EAAEK,SADM;AAEZG,MAAAA,GAAG,EAAEJ,SAAS,CAACK,OAFH;AAGZC,MAAAA,QAAQ,EAAGC,IAAD,IAA8B;AACtC,eAAOA,IAAI,CAACC,MAAL,CAAYJ,GAAG,IAAIA,GAAG,CAACK,OAAvB,EAAgCC,GAAhC,CAAoCN,GAAG,IAAIA,GAAG,CAACO,KAA/C,CAAP;AACD,OALW;AAMZC,MAAAA,UAAU,EAAGL,IAAD,IAA8B;AACxCA,QAAAA,IAAI,CAACM,OAAL,CAAaT,GAAG,IAAI;AAClBA,UAAAA,GAAG,CAACK,OAAJ,GAAc,KAAd;AACD,SAFD;AAGD,OAVW;AAWZK,MAAAA,QAAQ,EAAE,CAACP,IAAD,EAA2BQ,MAA3B,KAAgD;AACxDR,QAAAA,IAAI,CAACM,OAAL,CAAaT,GAAG,IAAI;AAClB,cAAIW,MAAM,CAACC,QAAP,CAAgBZ,GAAG,CAACa,EAApB,CAAJ,EAA6B;AAC3Bb,YAAAA,GAAG,CAACK,OAAJ,GAAc,IAAd;AACD;AACF,SAJD;AAKD;AAjBW,KAAD,CAAb;AAmBD,GApBQ,EAoBN,CAACN,YAAD,EAAeF,SAAf,EAA0BC,aAA1B,CApBM,CAAT;AAsBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACa,GAAR,CAAYQ,MAAM,iBACjB;AAAK,IAAA,GAAG,EAAEA,MAAM,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEA,MAAM,CAAC,CAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAAC,CAAD,CADT,eAEE;AACE,IAAA,GAAG,EAAEd,GAAG,IAAIJ,SAAS,CAACK,OAAV,CAAkBc,IAAlB,CAAuBf,GAAvB,CADd;AAEE,IAAA,KAAK,EAAEc,MAAM,CAAC,CAAD,CAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAEtB,IAJR;AAKE,IAAA,EAAE,EAAEsB,MAAM,CAAC,CAAD,CALZ;AAME,IAAA,cAAc,EAAGA,MAAM,CAAC,CAAD,CAAN,KAAcpB;AANjC,KAOMC,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADD,CADH,CADF;AAoBD,CA9CD;;AAgDA,eAAeJ,UAAf","sourcesContent":["import React, {\r\n  InputHTMLAttributes,\r\n  useEffect,\r\n  useRef,\r\n} from 'react';\r\n\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container } from './styles';\r\n\r\ntype OptionsObject = Array<any>;\r\n\r\ninterface IInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n  options: OptionsObject[];\r\n  checkedValue: string;\r\n}\r\n\r\nconst RadioInput: React.FC<IInputProps> = ({ name, options, checkedValue, ...rest }) => {\r\n  const inputRefs = useRef<HTMLInputElement[]>([]);\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRefs.current,\r\n      getValue: (refs: HTMLInputElement[]) => {\r\n        return refs.filter(ref => ref.checked).map(ref => ref.value);\r\n      },\r\n      clearValue: (refs: HTMLInputElement[]) => {\r\n        refs.forEach(ref => {\r\n          ref.checked = false;\r\n        });\r\n      },\r\n      setValue: (refs: HTMLInputElement[], values: string[]) => {\r\n        refs.forEach(ref => {\r\n          if (values.includes(ref.id)) {\r\n            ref.checked = true;\r\n          }\r\n        });\r\n      },\r\n    });\r\n  }, [defaultValue, fieldName, registerField]);\r\n\r\n  return (\r\n    <Container>\r\n      {options.map(option => (\r\n        <div key={option[0]}>\r\n          <label htmlFor={option[0]} >\r\n            {option[1]}\r\n            <input\r\n              ref={ref => inputRefs.current.push(ref as HTMLInputElement)}\r\n              value={option[0]}\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option[0]}\r\n              defaultChecked={ option[0] === checkedValue }\r\n              {...rest}\r\n            />\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n"]},"metadata":{},"sourceType":"module"}