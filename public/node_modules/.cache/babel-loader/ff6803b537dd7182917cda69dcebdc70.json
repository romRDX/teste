{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romul\\\\Desktop\\\\Nova pasta\\\\Sheetgo-BookShelf\\\\src\\\\pages\\\\BookDetails\\\\index.tsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createBook, deleteBook, editBook } from '../../store/ducks/books/actions';\nimport * as bookStore from '../../services/bookStore';\nimport 'react-day-picker/lib/style.css';\nimport { Container, Content } from './styles';\nimport Details from './components/Details';\nimport Comments from './components/Comments';\nimport ModalAddBook from '../../components/ModalAddBook';\nimport ModalEditBook from '../../components/ModalEditBook';\nimport ModalEditComment from '../../components/ModalEditComment';\nimport GoBackButton from '../../components/GoBackButton';\nimport Header from '../../components/Header';\nimport { useHistory } from 'react-router-dom';\nimport { editComment } from '../../store/ducks/comments/actions';\n\nconst BookDetails = ({\n  location,\n  dispatch\n}) => {\n  const history = useHistory();\n  const [selectedBook, setSelectedBook] = useState({});\n  const [editingBook, setEditingBook] = useState({});\n  const [editingComment, setEditingComment] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editBookModalOpen, setEditBookModalOpen] = useState(false);\n  const [editCommentModalOpen, setEditCommentModalOpen] = useState(false);\n  useEffect(() => {\n    setSelectedBook(location.state);\n  }, [location.state]);\n  const toggleModal = useCallback(() => {\n    setModalOpen(!modalOpen);\n  }, [setModalOpen, modalOpen]);\n  const toggleEditCommentModal = useCallback(comment => {\n    if (comment) {\n      setEditingComment(comment);\n    }\n\n    setEditCommentModalOpen(!editCommentModalOpen);\n  }, [setEditCommentModalOpen, editCommentModalOpen, setEditingComment]);\n  const toggleEditBookModal = useCallback(book => {\n    if (book) {\n      setEditingBook(book);\n    }\n\n    setEditBookModalOpen(!editBookModalOpen);\n  }, [setEditBookModalOpen, editBookModalOpen, setEditingBook]);\n  const handleAddBook = useCallback(newBook => {\n    dispatch(createBook(newBook));\n    history.push('book-details', newBook);\n  }, [dispatch, history]);\n  const handleEditBook = useCallback(updatedBook => {\n    // comment\n    bookStore.patch(updatedBook);\n    dispatch(editBook(updatedBook));\n    setSelectedBook(updatedBook);\n  }, [dispatch, setSelectedBook]);\n  const handleDeleteBook = useCallback(bookId => {\n    dispatch(deleteBook(bookId));\n    history.push('/dashboard');\n  }, [history, dispatch]);\n  const handleEditComment = useCallback(updatedComment => {\n    // comment\n    dispatch(editComment({ ...editingComment,\n      ...updatedComment\n    }));\n  }, [dispatch, editingComment]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    toggleModal: toggleModal,\n    orderBy: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalAddBook, {\n    isOpen: modalOpen,\n    setIsOpen: toggleModal,\n    handleAddBook: handleAddBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEditComment, {\n    isOpen: editCommentModalOpen,\n    setIsOpen: toggleEditCommentModal,\n    handleEditComment: handleEditComment,\n    editingComment: editingComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEditBook, {\n    isOpen: editBookModalOpen,\n    setIsOpen: toggleEditBookModal,\n    handleEditBook: handleEditBook,\n    editingBook: editingBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    setIsOpen: toggleEditBookModal,\n    selectedBook: selectedBook,\n    handleDeleteBook: handleDeleteBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Comments, {\n    selectedBook: selectedBook,\n    setIsOpen: toggleEditCommentModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GoBackButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connect()(BookDetails);","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/pages/BookDetails/index.tsx"],"names":["React","useState","useCallback","useEffect","connect","createBook","deleteBook","editBook","bookStore","Container","Content","Details","Comments","ModalAddBook","ModalEditBook","ModalEditComment","GoBackButton","Header","useHistory","editComment","BookDetails","location","dispatch","history","selectedBook","setSelectedBook","editingBook","setEditingBook","editingComment","setEditingComment","modalOpen","setModalOpen","editBookModalOpen","setEditBookModalOpen","editCommentModalOpen","setEditCommentModalOpen","state","toggleModal","toggleEditCommentModal","comment","toggleEditBookModal","book","handleAddBook","newBook","push","handleEditBook","updatedBook","patch","handleDeleteBook","bookId","handleEditComment","updatedComment"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { createBook, deleteBook, editBook } from '../../store/ducks/books/actions';\r\nimport  * as bookStore from '../../services/bookStore';\r\n\r\nimport 'react-day-picker/lib/style.css';\r\nimport {\r\n  Container,\r\n  Content,\r\n} from './styles';\r\n\r\nimport Details from './components/Details';\r\nimport Comments from './components/Comments';\r\n\r\nimport ModalAddBook from '../../components/ModalAddBook';\r\nimport ModalEditBook from '../../components/ModalEditBook';\r\nimport ModalEditComment from '../../components/ModalEditComment';\r\nimport GoBackButton from '../../components/GoBackButton';\r\n\r\nimport Header from '../../components/Header';\r\n\r\nimport { IBook } from '../../store/ducks/books/types';\r\nimport { IComment } from '../../store/ducks/comments/types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { editComment } from '../../store/ducks/comments/actions';\r\n\r\ninterface Statex {\r\n  location: {\r\n    state: IBook;\r\n  }\r\n  dispatch: Dispatch;\r\n}\r\n\r\nconst BookDetails: React.FC<Statex> = ({location, dispatch}) => {\r\n  const history = useHistory();\r\n\r\n  const [selectedBook, setSelectedBook] = useState<IBook>({} as IBook);\r\n  const [editingBook, setEditingBook] = useState<IBook>({} as IBook);\r\n  const [editingComment, setEditingComment] = useState<IComment>({} as IComment);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editBookModalOpen, setEditBookModalOpen] = useState(false);\r\n  const [editCommentModalOpen, setEditCommentModalOpen] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    setSelectedBook(location.state);\r\n  }, [location.state]);\r\n\r\n  const toggleModal = useCallback( (): void => {\r\n    setModalOpen(!modalOpen);\r\n  },[setModalOpen, modalOpen]);\r\n\r\n  const toggleEditCommentModal = useCallback( (comment?: IComment): void => {\r\n    if(comment){\r\n      setEditingComment(comment);\r\n    }\r\n    setEditCommentModalOpen(!editCommentModalOpen);\r\n  },[setEditCommentModalOpen, editCommentModalOpen, setEditingComment]);\r\n\r\n  const toggleEditBookModal = useCallback( (book?: IBook): void => {\r\n    if(book){\r\n      setEditingBook(book);\r\n    }\r\n    setEditBookModalOpen(!editBookModalOpen);\r\n  },[setEditBookModalOpen, editBookModalOpen, setEditingBook]);\r\n\r\n  const handleAddBook = useCallback( (newBook: IBook) => {\r\n    dispatch(createBook(newBook));\r\n    history.push('book-details', newBook);\r\n  }, [dispatch, history]);\r\n\r\n  const handleEditBook = useCallback( (updatedBook: IBook) => {\r\n    // comment\r\n    bookStore.patch(updatedBook);\r\n    dispatch(editBook(updatedBook));\r\n    setSelectedBook(updatedBook);\r\n\r\n  }, [dispatch, setSelectedBook]);\r\n\r\n  const handleDeleteBook = useCallback((bookId: string) =>{\r\n    dispatch(deleteBook(bookId));\r\n    history.push('/dashboard');\r\n  }, [history, dispatch]);\r\n\r\n  const handleEditComment = useCallback( (updatedComment: IComment) => {\r\n    // comment\r\n    dispatch(editComment({...editingComment, ...updatedComment}));\r\n  }, [dispatch, editingComment]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header toggleModal={toggleModal} orderBy={false} />\r\n\r\n      <ModalAddBook\r\n        isOpen={modalOpen}\r\n        setIsOpen={toggleModal}\r\n        handleAddBook={handleAddBook}\r\n      />\r\n\r\n      <ModalEditComment\r\n        isOpen={editCommentModalOpen}\r\n        setIsOpen={toggleEditCommentModal}\r\n        handleEditComment={handleEditComment}\r\n        editingComment={editingComment}\r\n      />\r\n\r\n      <ModalEditBook\r\n        isOpen={editBookModalOpen}\r\n        setIsOpen={toggleEditBookModal}\r\n        handleEditBook={handleEditBook}\r\n        editingBook={editingBook}\r\n      />\r\n\r\n      <Content>\r\n        <Details setIsOpen={toggleEditBookModal} selectedBook={selectedBook} handleDeleteBook={handleDeleteBook}></Details>\r\n        <Comments selectedBook={selectedBook} setIsOpen={toggleEditCommentModal}></Comments>\r\n        <GoBackButton />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect()(BookDetails);\r\n"]},"metadata":{},"sourceType":"module"}