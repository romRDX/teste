{"ast":null,"code":"import { BooksTypes } from './types';\nimport initialState from './initialState';\nimport * as bookStore from '../../../services/bookStore.ts';\nconst storedBooks = bookStore.get();\nconst INITIAL_STATE = {\n  data: storedBooks ? storedBooks : initialState\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BooksTypes.CREATE_BOOK:\n      return { ...state,\n        data: [...state.data, action.newBook]\n      };\n\n    case BooksTypes.EDIT_BOOK:\n      {\n        const newData = state.data.map(book => {\n          if (book.id === action.newBook.id) {\n            return action.newBook;\n          } else {\n            return book;\n          }\n        });\n        return { ...state,\n          data: newData\n        };\n      }\n\n    case BooksTypes.DELETE_BOOK:\n      {\n        const newData = state.data.map(book => {\n          if (book.id === action.bookId) {\n            return { ...book,\n              deleted: true\n            };\n          } else {\n            return book;\n          }\n        });\n        return { ...state,\n          data: newData\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/store/ducks/books/index.js"],"names":["BooksTypes","initialState","bookStore","storedBooks","get","INITIAL_STATE","data","reducer","state","action","type","CREATE_BOOK","newBook","EDIT_BOOK","newData","map","book","id","DELETE_BOOK","bookId","deleted"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,gCAA3B;AAEA,MAAMC,WAAW,GAAGD,SAAS,CAACE,GAAV,EAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAEH,WAAW,GAAGA,WAAH,GAAiBF;AADd,CAAtB;;AAIA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,UAAU,CAACW,WAAhB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACG,OAAvB;AAFD,OAAP;;AAKF,SAAKZ,UAAU,CAACa,SAAhB;AAA2B;AACzB,cAAMC,OAAO,GAAGN,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAiBC,IAAD,IAAU;AACxC,cAAKA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAAhC,EAAoC;AAClC,mBAAOR,MAAM,CAACG,OAAd;AACD,WAFD,MAEO;AACL,mBAAOI,IAAP;AACD;AACF,SANe,CAAhB;AAQA,eAAO,EACL,GAAGR,KADE;AAELF,UAAAA,IAAI,EAAEQ;AAFD,SAAP;AAID;;AAED,SAAKd,UAAU,CAACkB,WAAhB;AAA6B;AAC3B,cAAMJ,OAAO,GAAGN,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAiBC,IAAD,IAAU;AACxC,cAAKA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACU,MAAxB,EAAgC;AAC9B,mBAAO,EACL,GAAGH,IADE;AAELI,cAAAA,OAAO,EAAE;AAFJ,aAAP;AAID,WALD,MAKO;AACL,mBAAOJ,IAAP;AACD;AACF,SATe,CAAhB;AAWA,eAAO,EACL,GAAGR,KADE;AAELF,UAAAA,IAAI,EAAEQ;AAFD,SAAP;AAID;;AAID;AACE,aAAON,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,eAAeD,OAAf","sourcesContent":["import { BooksTypes } from './types';\r\n\r\nimport initialState from './initialState';\r\n\r\nimport * as bookStore from '../../../services/bookStore.ts';\r\n\r\nconst storedBooks = bookStore.get();\r\n\r\nconst INITIAL_STATE = {\r\n  data: storedBooks ? storedBooks : initialState,\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case BooksTypes.CREATE_BOOK:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.newBook],\r\n      };\r\n\r\n    case BooksTypes.EDIT_BOOK: {\r\n      const newData = state.data.map( (book) => {\r\n        if ( book.id === action.newBook.id) {\r\n          return action.newBook;\r\n        } else {\r\n          return book;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        data: newData\r\n      }\r\n    }\r\n\r\n    case BooksTypes.DELETE_BOOK: {\r\n      const newData = state.data.map( (book) => {\r\n        if ( book.id === action.bookId) {\r\n          return {\r\n            ...book,\r\n            deleted: true\r\n          };\r\n        } else {\r\n          return book;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        data: newData\r\n      }\r\n    }\r\n\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}