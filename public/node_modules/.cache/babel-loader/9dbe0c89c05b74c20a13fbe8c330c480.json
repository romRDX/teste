{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romul\\\\Desktop\\\\Nova pasta\\\\Sheetgo-BookShelf\\\\src\\\\components\\\\ModalEditBook\\\\index.tsx\";\nimport React, { useRef, useCallback } from 'react';\nimport * as categoryStore from '../../services/categoryStore';\nimport { FiCheckSquare } from 'react-icons/fi';\nimport { Form } from './styles';\nimport Modal from '../Modal';\nimport Input from '../Input';\nimport InputRadio from '../InputRadio';\nimport TextArea from '../TextArea';\n\nconst ModalEditFood = ({\n  isOpen,\n  setIsOpen,\n  editingBook,\n  handleEditBook\n}) => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    // EDIT A FOOD PLATE AND CLOSE THE MODAL\n    const formattedData = { ...editingBook,\n      ...data,\n      category: data.category[0]\n    };\n    handleEditBook(formattedData);\n    setIsOpen();\n  }, [handleEditBook, setIsOpen, editingBook]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    initialData: editingBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Edit Book\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"title\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"author\",\n    placeholder: \"Author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputRadio, {\n    name: \"category\",\n    checkedValue: editingBook.category,\n    options: Object.entries(categoryStore.get()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    name: \"description\",\n    placeholder: \"Description\",\n    rows: 9,\n    cols: 85,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-testid\": \"edit-food-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Editar Prato\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiCheckSquare, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ModalEditFood;","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/components/ModalEditBook/index.tsx"],"names":["React","useRef","useCallback","categoryStore","FiCheckSquare","Form","Modal","Input","InputRadio","TextArea","ModalEditFood","isOpen","setIsOpen","editingBook","handleEditBook","formRef","handleSubmit","data","formattedData","category","Object","entries","get"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,OAA3C;AAEA,OAAO,KAAKC,aAAZ,MAA+B,8BAA/B;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAWA,MAAMC,aAAoC,GAAG,CAAC;AAC5CC,EAAAA,MAD4C;AAE5CC,EAAAA,SAF4C;AAG5CC,EAAAA,WAH4C;AAI5CC,EAAAA;AAJ4C,CAAD,KAKvC;AACJ,QAAMC,OAAO,GAAGd,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAMe,YAAY,GAAGd,WAAW,CAC9B,MAAOe,IAAP,IAAuB;AACrB;AACA,UAAMC,aAAa,GAAG,EACpB,GAAGL,WADiB;AAEpB,SAAGI,IAFiB;AAGpBE,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,CAAc,CAAd;AAHU,KAAtB;AAMAL,IAAAA,cAAc,CAACI,aAAD,CAAd;AACAN,IAAAA,SAAS;AACV,GAX6B,EAY9B,CAACE,cAAD,EAAiBF,SAAjB,EAA4BC,WAA5B,CAZ8B,CAAhC;AAeA,sBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,MAAf;AAAuB,IAAA,SAAS,EAAEC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEG,OAAX;AAAoB,IAAA,QAAQ,EAAEC,YAA9B;AAA4C,IAAA,WAAW,EAAEH,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,YAAY,EAAEA,WAAW,CAACM,QAAtD;AAAgE,IAAA,OAAO,EAAEC,MAAM,CAACC,OAAP,CAAelB,aAAa,CAACmB,GAAd,EAAf,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,aAAf;AAA6B,IAAA,WAAW,EAAC,aAAzC;AAAuD,IAAA,IAAI,EAAE,CAA7D;AAAgE,IAAA,IAAI,EAAE,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CARF,CADF,CADF;AAmBD,CA1CD;;AA4CA,eAAeZ,aAAf","sourcesContent":["import React, { useRef, useCallback } from 'react';\r\n\r\nimport * as categoryStore from '../../services/categoryStore';\r\n\r\nimport { FiCheckSquare } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from './styles';\r\nimport Modal from '../Modal';\r\nimport Input from '../Input';\r\nimport InputRadio from '../InputRadio';\r\nimport TextArea from '../TextArea';\r\n\r\nimport { IBook } from '../../store/ducks/books/types';\r\n\r\ninterface IModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: () => void;\r\n  handleEditBook: (book: IBook) => void;\r\n  editingBook: IBook;\r\n}\r\n\r\nconst ModalEditFood: React.FC<IModalProps> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  editingBook,\r\n  handleEditBook,\r\n}) => {\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: IBook) => {\r\n      // EDIT A FOOD PLATE AND CLOSE THE MODAL\r\n      const formattedData = {\r\n        ...editingBook,\r\n        ...data,\r\n        category: data.category[0]\r\n      }\r\n\r\n      handleEditBook(formattedData);\r\n      setIsOpen();\r\n    },\r\n    [handleEditBook, setIsOpen, editingBook],\r\n  );\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingBook}>\r\n        <h1>Edit Book</h1>\r\n\r\n        <Input name=\"title\" placeholder=\"Title\" />\r\n        <Input name=\"author\" placeholder=\"Author\" />\r\n        <InputRadio name=\"category\" checkedValue={editingBook.category} options={Object.entries(categoryStore.get())} />\r\n        <TextArea name=\"description\" placeholder=\"Description\" rows={9} cols={85}/>\r\n\r\n        <button type=\"submit\" data-testid=\"edit-food-button\">\r\n          <div className=\"text\">Editar Prato</div>\r\n          <div className=\"icon\">\r\n            <FiCheckSquare size={24} />\r\n          </div>\r\n        </button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalEditFood;\r\n"]},"metadata":{},"sourceType":"module"}