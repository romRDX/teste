{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romul\\\\Desktop\\\\Nova pasta\\\\Sheetgo-BookShelf\\\\src\\\\components\\\\ModalEditComment\\\\index.tsx\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { FiCheckSquare } from 'react-icons/fi';\nimport { Form } from './styles';\nimport Modal from '../Modal';\nimport Input from '../Input';\nimport TextArea from '../TextArea';\n\nconst ModalEditFood = ({\n  isOpen,\n  setIsOpen,\n  editingComment,\n  handleEditComment\n}) => {\n  const formRef = useRef(null);\n  useEffect(() => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setData({\n      author: editingComment.author,\n      body: editingComment.body\n    }); // formRef.current?.setData({   });\n  }, [editingComment.author, editingComment.body]);\n  const handleSubmit = useCallback(async data => {\n    // EDIT A FOOD PLATE AND CLOSE THE MODAL\n    handleEditComment(data);\n    setIsOpen();\n  }, [handleEditComment, setIsOpen]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    initialData: editingComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Edit Comment\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"author\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    name: \"body\",\n    placeholder: \"Comment\",\n    rows: 9,\n    cols: 85,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-testid\": \"edit-food-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Apply\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiCheckSquare, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ModalEditFood;","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/components/ModalEditComment/index.tsx"],"names":["React","useRef","useCallback","useEffect","FiCheckSquare","Form","Modal","Input","TextArea","ModalEditFood","isOpen","setIsOpen","editingComment","handleEditComment","formRef","current","setData","author","body","handleSubmit","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,OAAtD;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAkBA,MAAMC,aAAoC,GAAG,CAAC;AAC5CC,EAAAA,MAD4C;AAE5CC,EAAAA,SAF4C;AAG5CC,EAAAA,cAH4C;AAI5CC,EAAAA;AAJ4C,CAAD,KAKvC;AACJ,QAAMC,OAAO,GAAGb,MAAM,CAAc,IAAd,CAAtB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,wBAAAW,OAAO,CAACC,OAAR,sEAAiBC,OAAjB,CAAyB;AAAEC,MAAAA,MAAM,EAAEL,cAAc,CAACK,MAAzB;AAAiCC,MAAAA,IAAI,EAAEN,cAAc,CAACM;AAAtD,KAAzB,EADc,CAEd;AACD,GAHQ,EAGN,CAACN,cAAc,CAACK,MAAhB,EAAwBL,cAAc,CAACM,IAAvC,CAHM,CAAT;AAKA,QAAMC,YAAY,GAAGjB,WAAW,CAC9B,MAAOkB,IAAP,IAA0B;AACxB;AACAP,IAAAA,iBAAiB,CAACO,IAAD,CAAjB;AACAT,IAAAA,SAAS;AACV,GAL6B,EAM9B,CAACE,iBAAD,EAAoBF,SAApB,CAN8B,CAAhC;AASA,sBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,MAAf;AAAuB,IAAA,SAAS,EAAEC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEG,OAAX;AAAoB,IAAA,QAAQ,EAAEK,YAA9B;AAA4C,IAAA,WAAW,EAAEP,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,WAAW,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAE,CAAlD;AAAqD,IAAA,IAAI,EAAE,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CANF,CADF,CADF;AAiBD,CAvCD;;AAyCA,eAAeH,aAAf","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\n\r\nimport { FiCheckSquare } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from './styles';\r\nimport Modal from '../Modal';\r\nimport Input from '../Input';\r\nimport TextArea from '../TextArea';\r\n\r\nimport { IComment } from '../../store/ducks/comments/types';\r\n\r\ninterface IModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: (comment?: IComment) => void;\r\n  handleEditComment: (comment: IComment) => void;\r\n  editingComment: IComment;\r\n}\r\n\r\ninterface IEditFoodData {\r\n  name: string;\r\n  image: string;\r\n  price: string;\r\n  description: string;\r\n}\r\n\r\nconst ModalEditFood: React.FC<IModalProps> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  editingComment,\r\n  handleEditComment,\r\n}) => {\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  useEffect(() => {\r\n    formRef.current?.setData({ author: editingComment.author, body: editingComment.body  });\r\n    // formRef.current?.setData({   });\r\n  }, [editingComment.author, editingComment.body]);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: IComment) => {\r\n      // EDIT A FOOD PLATE AND CLOSE THE MODAL\r\n      handleEditComment(data);\r\n      setIsOpen();\r\n    },\r\n    [handleEditComment, setIsOpen],\r\n  );\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\r\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingComment}>\r\n        <h1>Edit Comment</h1>\r\n\r\n        <Input name=\"author\" placeholder=\"Name\" />\r\n        <TextArea name=\"body\" placeholder=\"Comment\" rows={9} cols={85} />\r\n\r\n        <button type=\"submit\" data-testid=\"edit-food-button\">\r\n          <div className=\"text\">Apply</div>\r\n          <div className=\"icon\">\r\n            <FiCheckSquare size={24} />\r\n          </div>\r\n        </button>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalEditFood;\r\n"]},"metadata":{},"sourceType":"module"}