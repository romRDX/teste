{"ast":null,"code":"/**\r\n * Local Storage Bookss Service.\r\n * Manipulate the Books object in local storage.\r\n */\nimport bookImage from '../assets/book.jpg'; //'../../assets/book.jpg';\n\nimport { v4 as uuid } from 'uuid';\nexport const post = newBook => {\n  const storedBooks = get();\n  console.log(newBook);\n  const formattedBook = { ...newBook,\n    id: uuid(),\n    img: bookImage,\n    created_at: Date.now(),\n    category: 'uncategorized',\n    deleted: false\n  };\n\n  if (storedBooks) {\n    const newStoredBooks = [...storedBooks, formattedBook];\n    localStorage.setItem('Sheetgo/Books', JSON.stringify(newStoredBooks));\n  } else {\n    const newBooksStore = [formattedBook];\n    localStorage.setItem('Sheetgo/Books', JSON.stringify(newBooksStore));\n  }\n\n  console.log('x: ', formattedBook);\n  return formattedBook;\n};\nexport const get = () => {\n  const bookStore = localStorage.getItem('Sheetgo/Books');\n\n  if (bookStore) {\n    return JSON.parse(bookStore);\n  }\n};\nexport const put = books => {\n  localStorage.removeItem('Sheetgo/Books');\n  localStorage.setItem('Sheetgo/Books', JSON.stringify(books));\n};\nexport const patch = updatedBook => {\n  const storedBooks = get();\n  const updatedStoredBooks = storedBooks.map(book => {\n    if (book.id === updatedBook.id) {\n      return { ...updatedBook\n      };\n    } else {\n      return book;\n    }\n  });\n  localStorage.setItem('Sheetgo/Books', JSON.stringify(updatedStoredBooks));\n};","map":{"version":3,"sources":["C:/Users/romul/Desktop/Nova pasta/Sheetgo-BookShelf/src/services/bookStore.ts"],"names":["bookImage","v4","uuid","post","newBook","storedBooks","get","console","log","formattedBook","id","img","created_at","Date","now","category","deleted","newStoredBooks","localStorage","setItem","JSON","stringify","newBooksStore","bookStore","getItem","parse","put","books","removeItem","patch","updatedBook","updatedStoredBooks","map","book"],"mappings":"AAAA;;;;AAKA,OAAOA,SAAP,MAAsB,oBAAtB,C,CAA4C;;AAC5C,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAGA,OAAO,MAAMC,IAAI,GAAIC,OAAD,IAAoB;AACtC,QAAMC,WAAW,GAAGC,GAAG,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,QAAMK,aAAa,GAAG,EACpB,GAAGL,OADiB;AAEpBM,IAAAA,EAAE,EAAER,IAAI,EAFY;AAGpBS,IAAAA,GAAG,EAAEX,SAHe;AAIpBY,IAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL,EAJQ;AAKpBC,IAAAA,QAAQ,EAAE,eALU;AAMpBC,IAAAA,OAAO,EAAE;AANW,GAAtB;;AASA,MAAGX,WAAH,EAAe;AACb,UAAMY,cAAc,GAAG,CAAC,GAAGZ,WAAJ,EAAiBI,aAAjB,CAAvB;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeJ,cAAf,CAAtC;AACD,GAHD,MAGO;AACL,UAAMK,aAAa,GAAG,CAAEb,aAAF,CAAtB;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeC,aAAf,CAAtC;AACD;;AAEDf,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBC,aAAlB;AACA,SAAOA,aAAP;AACD,CAxBM;AA0BP,OAAO,MAAMH,GAAG,GAAG,MAAM;AACvB,QAAMiB,SAAS,GAAGL,YAAY,CAACM,OAAb,CAAqB,eAArB,CAAlB;;AAEA,MAAGD,SAAH,EAAa;AACX,WAAOH,IAAI,CAACK,KAAL,CAAWF,SAAX,CAAP;AACD;AACF,CANM;AAQP,OAAO,MAAMG,GAAG,GAAIC,KAAD,IAAoB;AACrCT,EAAAA,YAAY,CAACU,UAAb,CAAwB,eAAxB;AACAV,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeM,KAAf,CAAtC;AACD,CAHM;AAKP,OAAO,MAAME,KAAK,GAAIC,WAAD,IAAwB;AAC3C,QAAMzB,WAAW,GAAGC,GAAG,EAAvB;AACA,QAAMyB,kBAAkB,GAAG1B,WAAW,CAAC2B,GAAZ,CAAkBC,IAAD,IAAiB;AAC3D,QAAGA,IAAI,CAACvB,EAAL,KAAYoB,WAAW,CAACpB,EAA3B,EAA8B;AAC5B,aAAO,EAAC,GAAGoB;AAAJ,OAAP;AACD,KAFD,MAEO;AACL,aAAOG,IAAP;AACD;AACF,GAN0B,CAA3B;AAQAf,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeU,kBAAf,CAAtC;AACD,CAXM","sourcesContent":["/**\r\n * Local Storage Bookss Service.\r\n * Manipulate the Books object in local storage.\r\n */\r\n\r\nimport bookImage from '../assets/book.jpg'; //'../../assets/book.jpg';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { IBook } from '../store/ducks/books/types';\r\n\r\nexport const post = (newBook: IBook) => {\r\n  const storedBooks = get();\r\n\r\n  console.log(newBook);\r\n\r\n  const formattedBook = {\r\n    ...newBook,\r\n    id: uuid(),\r\n    img: bookImage,\r\n    created_at: Date.now(),\r\n    category: 'uncategorized',\r\n    deleted: false,\r\n  }\r\n\r\n  if(storedBooks){\r\n    const newStoredBooks = [...storedBooks, formattedBook];\r\n    localStorage.setItem('Sheetgo/Books', JSON.stringify(newStoredBooks));\r\n  } else {\r\n    const newBooksStore = [ formattedBook ];\r\n    localStorage.setItem('Sheetgo/Books', JSON.stringify(newBooksStore));\r\n  }\r\n\r\n  console.log('x: ',formattedBook);\r\n  return formattedBook;\r\n}\r\n\r\nexport const get = () => {\r\n  const bookStore = localStorage.getItem('Sheetgo/Books');\r\n\r\n  if(bookStore){\r\n    return JSON.parse(bookStore);\r\n  }\r\n};\r\n\r\nexport const put = (books: IBook[]) => {\r\n  localStorage.removeItem('Sheetgo/Books')\r\n  localStorage.setItem('Sheetgo/Books', JSON.stringify(books));\r\n};\r\n\r\nexport const patch = (updatedBook: IBook) => {\r\n  const storedBooks = get();\r\n  const updatedStoredBooks = storedBooks.map( (book: IBook) => {\r\n    if(book.id === updatedBook.id){\r\n      return {...updatedBook};\r\n    } else {\r\n      return book;\r\n    }\r\n  })\r\n\r\n  localStorage.setItem('Sheetgo/Books', JSON.stringify(updatedStoredBooks));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}